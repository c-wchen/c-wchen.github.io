(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{322:function(e,t,r){e.exports=r.p+"assets/img/HTTP_Request.d2fb5602.png"},323:function(e,t,r){e.exports=r.p+"assets/img/HTTP_Response.94e095a3.png"},511:function(e,t,r){"use strict";r.r(t);var o=r(13),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("**超文本传输协议（HTTP）**是一个用于传输超媒体文档（例如 HTML）的"),o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Application_Layer",target:"_blank",rel:"noopener noreferrer"}},[e._v("应用层"),o("OutboundLink")],1),e._v("协议。它是为 Web 浏览器与 Web 服务器之间的通信而设计的，但也可以用于其他目的。HTTP 遵循经典的"),o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Client%E2%80%93server_model",target:"_blank",rel:"noopener noreferrer"}},[e._v("客户端-服务端模型"),o("OutboundLink")],1),e._v("（client-server），客户端打开一个连接以发出请求，然后等待它收到服务器端响应。HTTP 是"),o("a",{attrs:{href:"http://en.wikipedia.org/wiki/Stateless_protocol",target:"_blank",rel:"noopener noreferrer"}},[e._v("无状态协议"),o("OutboundLink")],1),e._v("，这意味着服务器不会在两个请求之间保留任何数据（状态）。该协议虽然通常基于 TCP/IP 层，但可以在任何可靠的"),o("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E5%B1%82",target:"_blank",rel:"noopener noreferrer"}},[e._v("传输层"),o("OutboundLink")],1),e._v("上使用；也就是说，不像 UDP，它是一个不会静默丢失消息的协议。"),o("a",{attrs:{href:"https://en.wikipedia.org/wiki/Reliable_User_Datagram_Protocol",target:"_blank",rel:"noopener noreferrer"}},[e._v("RUDP"),o("OutboundLink")],1),e._v("——作为 UDP 的可靠化升级版本——是一种合适的替代选择。")]),e._v(" "),o("h3",{attrs:{id:"http实体"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#http实体"}},[e._v("#")]),e._v(" HTTP实体")]),e._v(" "),o("p",[e._v("http协议是client-server协议，客户端发送请求（request）和服务端接收到客户端的请求并响应（response）的过程")]),e._v(" "),o("ol",[o("li",[e._v("客户端（user-agent）")]),e._v(" "),o("li",[e._v("服务端（server）")]),e._v(" "),o("li",[e._v("代理（proxies）")])]),e._v(" "),o("h4",{attrs:{id:"代理的作用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#代理的作用"}},[e._v("#")]),e._v(" 代理的作用")]),e._v(" "),o("p",[e._v("在浏览器和服务器之间，有许多计算机和其他设备转发了HTTP消息。由于Web栈层次结构的原因，它们大多都出现在传输层、网络层和物理层上，对于HTTP应用层而言就是透明的，虽然它们可能会对应用层性能有重要影响。还有一部分是表现在应用层上的，被称为"),o("strong",[e._v("代理（Proxies）")]),e._v("。代理（Proxies）既可以表现得透明，又可以不透明（“改变请求”会通过它们）。代理主要有如下几种作用：")]),e._v(" "),o("ul",[o("li",[e._v("缓存（可以是公开的也可以是私有的，像浏览器的缓存）")]),e._v(" "),o("li",[e._v("过滤（像反病毒扫描，家长控制...）")]),e._v(" "),o("li",[e._v("负载均衡（让多个服务器服务不同的请求）")]),e._v(" "),o("li",[e._v("认证（对不同资源进行权限管理）")]),e._v(" "),o("li",[e._v("日志记录（允许存储历史信息）")])]),e._v(" "),o("h3",{attrs:{id:"http协议性质"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#http协议性质"}},[e._v("#")]),e._v(" HTTP协议性质")]),e._v(" "),o("ol",[o("li",[o("p",[o("strong",[e._v("无状态和会话")])]),e._v(" "),o("p",[e._v("HTTP无状态协议，是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快")]),e._v(" "),o("p",[o("strong",[e._v("注意，HTTP本质是无状态的，使用Cookies可以创建有状态的会话")])])]),e._v(" "),o("li",[o("p",[e._v("可扩展")]),e._v(" "),o("p",[e._v("在 HTTP/1.0 中出现的 "),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP headers"),o("OutboundLink")],1),e._v(" 让协议扩展变得非常容易。只要服务端和客户端就新 headers 达成语义一致，新功能就可以被轻松加入进来。")])])]),e._v(" "),o("h3",{attrs:{id:"http协议报文"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#http协议报文"}},[e._v("#")]),e._v(" HTTP协议报文")]),e._v(" "),o("p",[o("strong",[e._v("请求信息")])]),e._v(" "),o("p",[o("img",{attrs:{src:r(322),alt:"request"}})]),e._v(" "),o("p",[e._v("注意： 请求消息结构包含： 请求行（Method、Path、Version of the protocol）、请求头（头部字段）、空行和请求数据")]),e._v(" "),o("p",[o("strong",[e._v("响应信息")])]),e._v(" "),o("p",[o("img",{attrs:{src:r(323),alt:"response"}})]),e._v(" "),o("p",[e._v("注意： 状态行、消息报头、空行和响应正文。")]),e._v(" "),o("h3",{attrs:{id:"基于http协议的apis"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#基于http协议的apis"}},[e._v("#")]),e._v(" 基于http协议的APIs")]),e._v(" "),o("p",[e._v("基于HTTP的最常用API是"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("XMLHttpRequest")]),o("OutboundLink")],1),e._v(" （ajax）API，可用于在"),o("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/user_agent",target:"_blank",rel:"noopener noreferrer"}},[e._v("user agent"),o("OutboundLink")],1),e._v("和服务器之间交换数据。 现代"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("Fetch API")]),o("OutboundLink")],1),e._v("提供相同的功能，具有更强大和灵活的功能集。")]),e._v(" "),o("p",[e._v("另一种API（websockets），即服务器发送的事件，是一种单向服务，允许服务器使用HTTP作为传输机制向客户端发送事件。 使用"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("EventSource")]),o("OutboundLink")],1),e._v("接口，客户端打开连接并建立事件句柄。 客户端浏览器自动将到达HTTP流的消息转换为适当的"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Event",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("Event")]),o("OutboundLink")],1),e._v("对象，并将它们传递给专门处理这类"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Event/type",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("type")]),o("OutboundLink")],1),e._v("事件的句柄，如果有这么个句柄的话。但如果相应的事件处理句柄根本没有建立，那就交给"),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource/onmessage",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("onmessage")]),o("OutboundLink")],1),e._v("事件处理程序处理。")]),e._v(" "),o("h3",{attrs:{id:"响应状态码"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#响应状态码"}},[e._v("#")]),e._v(" 响应状态码")]),e._v(" "),o("p",[e._v("1xx：指示信息--表示请求已接收，继续处理")]),e._v(" "),o("p",[e._v("2xx：成功--表示请求已被成功接收、理解、接受")]),e._v(" "),o("p",[e._v("3xx：重定向--要完成请求必须进行更进一步的操作")]),e._v(" "),o("p",[e._v("4xx：客户端错误--请求有语法错误或请求无法实现")]),e._v(" "),o("p",[e._v("5xx：服务器端错误--服务器未能实现合法的请求")]),e._v(" "),o("h3",{attrs:{id:"跨域资源请求-cors"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#跨域资源请求-cors"}},[e._v("#")]),e._v(" 跨域资源请求（CORS）")]),e._v(" "),o("p",[e._v("跨域资源共享("),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/CORS",target:"_blank",rel:"noopener noreferrer"}},[e._v("CORS"),o("OutboundLink")],1),e._v(") 是一种机制，它使用额外的 "),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/HTTP",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP"),o("OutboundLink")],1),e._v(" 头来告诉浏览器 让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。当一个资源从与该资源本身所在的服务器"),o("strong",[e._v("不同的域、协议或端口")]),e._v("请求一个资源时，资源会发起一个"),o("strong",[e._v("跨域 HTTP 请求")]),e._v("。")]),e._v(" "),o("p",[e._v("比如，站点 http://domain-a.com 的某 HTML 页面通过 "),o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Img#Attributes",target:"_blank",rel:"noopener noreferrer"}},[e._v(" 的 src "),o("OutboundLink")],1),e._v("请求 http://domain-b.com/image.jpg。网络上的许多页面都会加载来自不同域的CSS样式表，图像和脚本等资源。")]),e._v(" "),o("p",[e._v("出于安全原因，浏览器限制从脚本内发起的跨源HTTP请求。 例如，XMLHttpRequest和Fetch API遵循同源策略。 这意味着使用这些API的Web应用程序只能从加载应用程序的同一个域请求HTTP资源，除非响应报文包含了正确CORS响应头。")]),e._v(" "),o("h3",{attrs:{id:"什么是tls"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#什么是tls"}},[e._v("#")]),e._v(" 什么是TLS")]),e._v(" "),o("p",[e._v("TLS（Transport Layer Security，安全传输层)，TLS是建立在传输层TCP协议之上的协议，服务于应用层，它的前身是SSL（Secure Socket Layer，安全套接字层），它实现了将应用层的"),o("strong",[e._v("报文进行加密后")]),e._v("再交由TCP进行传输的功能")]),e._v(" "),o("p",[e._v("TLS协议主要解决如下三个网络安全问题")]),e._v(" "),o("ol",[o("li",[e._v("保密(message privacy)，保密通过加密encryption实现，所有信息都加密传输，第三方无法嗅探；")]),e._v(" "),o("li",[e._v("完整性(message integrity)，通过MAC校验机制，一旦被篡改，通信双方会立刻发现；")]),e._v(" "),o("li",[e._v("认证(mutual authentication)，双方认证,双方都可以配备证书，防止身份被冒充；")])]),e._v(" "),o("h3",{attrs:{id:"https和http协议区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#https和http协议区别"}},[e._v("#")]),e._v(" HTTPS和HTTP协议区别")]),e._v(" "),o("p",[e._v("HTTPS是一种基于SSL/TLS的Http协议，所有的HTTP数据都是在"),o("strong",[e._v("SSL/TLS协议")]),e._v("封装之上传输的。")]),e._v(" "),o("p",[e._v("HTTPS协议在HTTP协议的基础上，添加了SSL/TLS握手以及数据加密传输，也属于应用层协议。")]),e._v(" "),o("p",[o("strong",[e._v("HTTP协议运行在TCP之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份")])]),e._v(" "),o("p",[o("strong",[e._v("HTTPS是运行在SSL/TLS之上的HTTP协议，SSL/TLS运行在TCP之上。所有传输的内容都经过加密")])]),e._v(" "),o("h3",{attrs:{id:"参考文献"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[e._v("#")]),e._v(" 参考文献")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"}},[e._v("状态码参照"),o("OutboundLink")],1)]),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.cnblogs.com/ll-gaocheng/p/11051896.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("postman使用"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("https://www.jianshu.com/p/1fc7130eb2c2")]),e._v(" "),o("p",[e._v("[SSL/TLS协议区别("),o("a",{attrs:{href:"https://xiaoyue26.github.io/2018/09/26/2018-09/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3SSL-TLS%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%AB%E4%B8%8E%E5%8E%9F%E7%90%86/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://xiaoyue26.github.io/2018/09/26/2018-09/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3SSL-TLS%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%AB%E4%B8%8E%E5%8E%9F%E7%90%86/"),o("OutboundLink")],1),e._v(")")])])}),[],!1,null,null,null);t.default=a.exports}}]);