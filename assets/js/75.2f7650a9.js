(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{389:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rest应用体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest应用体系结构"}},[t._v("#")]),t._v(" REST应用体系结构")]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v('REST是"REpresentational State Transfer"可以翻译成“表现型状态转换”')]),t._v(" "),a("p",[t._v('在RESTful中一切都被认为是资源，每个资源有对应的URI标识，处理资源使用GET、POST、PUT、DELETE等HTTP方法操作进行创建、读取、修改、删除操作，客户端通过四个HTTP动词对服务端资源进行操作，实现"表现成动态转换"。表现是指资源表现，客户端和服务端之间春娣这种资源的表现层')]),t._v(" "),a("h3",{attrs:{id:"http动词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http动词"}},[t._v("#")]),t._v(" HTTP动词")]),t._v(" "),a("p",[t._v("对于资源的具体操作类型，由HTTP动词表示。")]),t._v(" "),a("p",[t._v("常用的HTTP动词有下面五个（括号里是对应的SQL命令）。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET（SELECT）：从服务器取出资源（一项或多项）。\nPOST（CREATE）：在服务器新建一个资源。\nPUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。\nPATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。\nDELETE（DELETE）：从服务器删除资源。\n")])])]),a("p",[t._v("还有两个不常用的HTTP动词。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("HEAD：获取资源的元数据。\nOPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。\n")])])]),a("p",[t._v("下面是一些例子。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("GET /zoos：列出所有动物园\nPOST /zoos：新建一个动物园\nGET /zoos/ID：获取某个指定动物园的信息\nPUT /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）\nPATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）\nDELETE /zoos/ID：删除某个动物园\nGET /zoos/ID/animals：列出某个指定动物园的所有动物\nDELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物\n")])])]),a("h3",{attrs:{id:"过滤信息-filtering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤信息-filtering"}},[t._v("#")]),t._v(" 过滤信息（Filtering）")]),t._v(" "),a("p",[t._v("如果记录数量很多，服务器不可能都将它们返回给用户。API应该提供参数，过滤返回结果。")]),t._v(" "),a("p",[t._v("下面是一些常见的参数。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("?limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("：指定返回记录的数量\n?offset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("：指定返回记录的开始位置。\n?page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("per_page")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("：指定第几页，以及每页的记录数。\n?sortby"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("asc：指定返回结果按照哪个属性排序，以及排序顺序。\n?animal_type_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：指定筛选条件\n")])])]),a("p",[t._v("参数的设计允许存在冗余，即允许API路径和URL参数偶尔有重复。比如，GET /zoo/ID/animals 与 GET /animals?zoo_id=ID 的含义是相同的。")]),t._v(" "),a("h3",{attrs:{id:"状态码-status-codes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态码-status-codes"}},[t._v("#")]),t._v(" 状态码（Status Codes）")]),t._v(" "),a("p",[t._v("服务器向用户返回的状态码和提示信息，常见的有以下一些（方括号中是该状态码对应的HTTP动词）。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" OK - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("201")]),t._v(" CREATED - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POST/PUT/PATCH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：用户新建或修改数据成功。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("202")]),t._v(" Accepted - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：表示一个请求已经进入后台排队（异步任务）\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("204")]),t._v(" NO CONTENT - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DELETE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：用户删除数据成功。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" INVALID REQUEST - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POST/PUT/PATCH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("401")]),t._v(" Unauthorized - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：表示用户没有权限（令牌、用户名、密码错误）。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),t._v(" Forbidden - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 表示用户得到授权（与401错误相对），但是访问是被禁止的。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" NOT FOUND - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("406")]),t._v(" Not Acceptable - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("410")]),t._v(" Gone -"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：用户请求的资源被永久删除，且不会再得到的。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("422")]),t._v(" Unprocesable entity - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("POST/PUT/PATCH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 当创建一个对象时，发生一个验证错误。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" INTERNAL SERVER ERROR - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：服务器发生错误，用户将无法判断发出的请求是否成功。\n")])])]),a("h3",{attrs:{id:"hypermedia-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hypermedia-api"}},[t._v("#")]),t._v(" Hypermedia API")]),t._v(" "),a("p",[t._v("RESTful API最好做到Hypermedia，即返回结果中提供链接，连向其他API方法，使得用户不查文档，也知道下一步应该做什么。")]),t._v(" "),a("p",[t._v("比如，当用户向api.example.com的根目录发出请求，会得到这样一个文档。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"link"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rel"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"collection https://www.example.com/zoos"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"href"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.example.com/zoos"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"List of zoos"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/vnd.yourformat+json"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面代码表示，文档中有一个link属性，用户读取这个属性就知道下一步该调用什么API了。rel表示这个API与当前网址的关系（collection关系，并给出该collection的网址），href表示API的路径，title表示API的标题，type表示返回类型。")]),t._v(" "),a("p",[t._v("Hypermedia API的设计被称为"),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/HATEOAS",target:"_blank",rel:"noopener noreferrer"}},[t._v("HATEOAS"),a("OutboundLink")],1),t._v("。Github的API就是这种设计，访问"),a("a",{attrs:{href:"https://api.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("api.github.com"),a("OutboundLink")],1),t._v("会得到一个所有可用API的网址列表。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"current_user_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.github.com/user"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"authorizations_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.github.com/authorizations"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从上面可以看到，如果想获取当前用户的信息，应该去访问"),a("a",{attrs:{href:"https://api.github.com/user",target:"_blank",rel:"noopener noreferrer"}},[t._v("api.github.com/user"),a("OutboundLink")],1),t._v("，然后就得到了下面结果。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Requires authentication"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"documentation_url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://developer.github.com/v3"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面代码表示，服务器给出了提示信息，以及文档的网址。")])])}),[],!1,null,null,null);s.default=e.exports}}]);