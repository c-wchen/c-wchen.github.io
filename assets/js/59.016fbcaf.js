(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{363:function(v,_,i){"use strict";i.r(_);var t=i(13),l=Object(t.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("p",[v._v("由ANSI标准定义的C语言关键字共32个:")]),v._v(" "),i("p",[v._v("auto double int struct break else long switch")]),v._v(" "),i("p",[v._v("case enum register typedef char extern return union")]),v._v(" "),i("p",[v._v("const float short unsigned continue for signed void")]),v._v(" "),i("p",[v._v("default goto sizeof volatile do if while static")]),v._v(" "),i("p",[v._v("根据关键字的作用，可以将关键字分为数据类型关键字和流程控制关键字两大类。")]),v._v(" "),i("h2",{attrs:{id:"一、数据类型关键字"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#一、数据类型关键字"}},[v._v("#")]),v._v(" 一、数据类型关键字")]),v._v(" "),i("p",[i("strong",[v._v("A基本数据类型（5个）")])]),v._v(" "),i("ul",[i("li",[v._v("void：声明函数无返回值或无参数，声明无类型指针，显式丢弃运算结果")]),v._v(" "),i("li",[v._v("char：字符型类型数据，属于整型数据的一种")]),v._v(" "),i("li",[v._v("int：整型数据，通常为编译器指定的机器字长")]),v._v(" "),i("li",[v._v("float：单精度浮点型数据，属于浮点数据的一种")]),v._v(" "),i("li",[v._v("double：双精度浮点型数据，属于浮点数据的一种")])]),v._v(" "),i("p",[i("strong",[v._v("B类型修饰关键字（4个）")])]),v._v(" "),i("ul",[i("li",[v._v("short：修饰int，短整型数据，可省略被修饰的int。")]),v._v(" "),i("li",[v._v("long：修饰int，长整形数据，可省略被修饰的int。")]),v._v(" "),i("li",[v._v("signed：修饰整型数据，有符号数据类型")]),v._v(" "),i("li",[v._v("unsigned：修饰整型数据，无符号数据类型")])]),v._v(" "),i("p",[i("strong",[v._v("C复杂类型关键字（5个）")])]),v._v(" "),i("ul",[i("li",[v._v("struct：结构体声明")]),v._v(" "),i("li",[v._v("union：共用体声明")]),v._v(" "),i("li",[v._v("enum：枚举声明")]),v._v(" "),i("li",[v._v("typedef：声明类型别名")]),v._v(" "),i("li",[v._v("sizeof：得到特定类型或特定类型变量的大小")])]),v._v(" "),i("p",[i("strong",[v._v("D存储级别关键字（6个）")])]),v._v(" "),i("ul",[i("li",[v._v("auto：指定为自动变量，由编译器自动分配及释放。通常在栈上分配")]),v._v(" "),i("li",[v._v("static：指定为静态变量，分配在静态变量区，修饰函数时，指定函数作用域为文件内部")]),v._v(" "),i("li",[v._v("register：指定为寄存器变量，建议编译器将变量存储到寄存器中使用，也可以修饰函数形参，建议编译器通过寄存器而不是堆栈传递参数")]),v._v(" "),i("li",[v._v("extern：指定对应变量为外部变量，即在另外的目标文件中定义，可以认为是约定由另外文件声明的对象的一个“引用“")]),v._v(" "),i("li",[v._v("const：与volatile合称“cv特性”，指定变量不可被当前线程/进程改变（但有可能被系统或其他线程/进程改变）")]),v._v(" "),i("li",[v._v("volatile：与const合称“cv特性”，指定变量的值有可能会被系统或其他进程/线程改变，强制编译器每次从内存中取得该变量的值")])]),v._v(" "),i("h2",{attrs:{id:"二、流程控制关键字"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#二、流程控制关键字"}},[v._v("#")]),v._v(" 二、流程控制关键字")]),v._v(" "),i("p",[i("strong",[v._v("A跳转结构（4个）")])]),v._v(" "),i("ul",[i("li",[v._v("return：用在函数体中，返回特定值（或者是void值，即不返回值）")]),v._v(" "),i("li",[v._v("continue：结束当前循环，开始下一轮循环")]),v._v(" "),i("li",[v._v("break：跳出当前循环或switch结构")]),v._v(" "),i("li",[v._v("goto：无条件跳转语句")])]),v._v(" "),i("p",[i("strong",[v._v("B分支结构（5个）")])]),v._v(" "),i("ul",[i("li",[v._v("if：条件语句")]),v._v(" "),i("li",[v._v("else：条件语句否定分支（与if连用）")]),v._v(" "),i("li",[v._v("switch：开关语句（多重分支语句）")]),v._v(" "),i("li",[v._v("case：开关语句中的分支标记")]),v._v(" "),i("li",[v._v("default：开关语句中的“其他”分治，可选。")])]),v._v(" "),i("p",[i("strong",[v._v("C循环结构（3个）")])]),v._v(" "),i("ul",[i("li",[v._v("for：for循环结构，for(1;2;3)4;的执行顺序为1->2->4->3->2...循环，其中2为循环条件")]),v._v(" "),i("li",[v._v("do：do循环结构，do 1 while(2);的执行顺序是1->2->1...循环，2为循环条件")]),v._v(" "),i("li",[v._v("while：while循环结构，while(1) 2;的执行顺序是1->2->1...循环，1为循环条件")])]),v._v(" "),i("p",[v._v("以上循环语句，当循环条件表达式为真则继续循环，为假则跳出循环。")]),v._v(" "),i("hr"),v._v(" "),i("p",[v._v("补充：")]),v._v(" "),i("p",[v._v("C语言中没有 string ，要想在C语言中使用字符串，就要在头文件里定义#include<string.h>（引用）而字符串在c++里的定义是#include"),i("string",[v._v("；在C/C++中使用字符串也就是定义时不一样，其他的都一样。string 是字符串，char是单个的字符。string相当于一个容器，char可以放在里面。string有结束符，char是没有的。string是c++里的，不是c里的。用string存储字符串时，不用设定字符串的长度，而char要设定。还有就是，string有很强很方便的功能，比如可以方便的赋值，方便的比较大小。")])],1)])}),[],!1,null,null,null);_.default=l.exports}}]);