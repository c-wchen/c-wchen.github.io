(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{321:function(a,e,t){a.exports=t.p+"assets/img/HTTPStaleness-163932626469114.38a664f7.png"},510:function(a,e,t){"use strict";t.r(e);var s=t(13),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("通过复用以前获取的资源，可以显著提高网站和应用程序的性能。Web 缓存减少了等待时间和网络流量，因此减少了显示资源表示形式所需的时间。通过使用 HTTP缓存，变得更加响应性。")]),a._v(" "),s("h3",{attrs:{id:"缓存分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存分类"}},[a._v("#")]),a._v(" 缓存分类")]),a._v(" "),s("p",[a._v("缓存的种类有很多,其大致可归为两类：私有（浏览器）与共享（代理）缓存。共享缓存存储的响应能够被多个用户使用。私有缓存只能用于单独用户。本文将主要介绍浏览器与代理缓存，除此之外还有网关缓存、CDN、反向代理缓存和负载均衡器等部署在服务器上的缓存方式，为站点和 web 应用提供更好的稳定性、性能和扩展性。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://mdn.mozillademos.org/files/13777/HTTPCachtType.png",alt:"cache"}})]),a._v(" "),s("h3",{attrs:{id:"缓存控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存控制"}},[a._v("#")]),a._v(" 缓存控制")]),a._v(" "),s("p",[s("strong",[a._v("HTTP/1.1")]),a._v("定义的 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("Cache-Control")]),s("OutboundLink")],1),a._v(" 头用来区分对缓存机制的支持情况， 请求头和响应头都支持这个属性。通过它提供的不同的值来定义缓存策略。")]),a._v(" "),s("p",[s("strong",[a._v("没有缓存")])]),a._v(" "),s("p",[a._v("缓存中不得存储任何关于客户端请求和服务端响应的内容。每次由客户端发起的请求都会下载完整的响应内容。")]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("Cache-Control: no-store\n")])])]),s("p",[s("strong",[a._v("缓存但重新验证")])]),a._v(" "),s("p",[a._v("如下头部定义，此方式下，每次有请求发出时，缓存会将此请求发到服务器（译者注：该请求应该会带有与本地缓存相关的验证字段），服务器端会验证请求中所描述的缓存是否过期，若未过期（注：实际就是返回304），则缓存才使用本地缓存副本。")]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("Cache-Control: no-cache\n")])])]),s("p",[s("strong",[a._v("私有和公共缓存")])]),a._v(" "),s("p",[a._v('"public" 指令表示该响应可以被任何中间人（译者注：比如中间代理、CDN等）缓存。若指定了"public"，则一些通常不被中间人缓存的页面（译者注：因为默认是private）（比如 带有HTTP验证信息（帐号密码）的页面 或 某些特定状态码的页面），将会被其缓存。')]),a._v(" "),s("p",[a._v('而 "private" 则表示该响应是专用于某单个用户的，中间人不能缓存此响应，该响应只能应用于浏览器私有缓存中。')]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("Cache-Control: private\nCache-Control: public\n")])])]),s("p",[s("strong",[a._v("过期")])]),a._v(" "),s("p",[a._v('过期机制中，最重要的指令是 "'),s("code",[a._v("max-age=<seconds>")]),a._v('"，表示资源能够被缓存（保持新鲜）的最大时间。相对'),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Expires",target:"_blank",rel:"noopener noreferrer"}},[a._v("Expires"),s("OutboundLink")],1),a._v("而言，max-age是距离请求发起的时间的秒数。针对应用中那些不会改变的文件，通常可以手动设置一定的时长以保证缓存有效，例如图片、css、js等静态资源。")]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("Cache-Control: max-age=31536000\n")])])]),s("p",[s("strong",[a._v("验证方式")])]),a._v(" "),s("p",[a._v('当使用了 "'),s("code",[a._v("must-revalidate")]),a._v('" 指令，那就意味着缓存在考虑使用一个陈旧的资源时，必须先验证它的状态，已过期的缓存将不被使用。详情看下文关于'),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching_FAQ#Cache_validation",target:"_blank",rel:"noopener noreferrer"}},[a._v("缓存校验"),s("OutboundLink")],1),a._v("的内容。")]),a._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[a._v("Cache-Control: must-revalidate\n")])])]),s("h3",{attrs:{id:"缓存处理过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存处理过程"}},[a._v("#")]),a._v(" 缓存处理过程")]),a._v(" "),s("p",[s("img",{attrs:{src:t(321),alt:"statleness"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);