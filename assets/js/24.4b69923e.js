(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{286:function(t,a,e){t.exports=e.p+"assets/img/image-20201022204848995.803312df.png"},287:function(t,a,e){t.exports=e.p+"assets/img/image-20201022211110375.6640ff75.png"},459:function(t,a,e){"use strict";e.r(a);var r=e(13),o=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"tomcat的总体架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tomcat的总体架构"}},[t._v("#")]),t._v(" tomcat的总体架构")]),t._v(" "),r("p",[r("img",{attrs:{src:e(286),alt:"image-20201022204848995"}})]),t._v(" "),r("p",[t._v("tomcat总体可以分为connector和container， connector负责接收请求和生成request和response交给container处理， container负责请求映射到具体的servlet")]),t._v(" "),r("h2",{attrs:{id:"启动过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#启动过程"}},[t._v("#")]),t._v(" 启动过程")]),t._v(" "),r("ol",[r("li",[t._v("静态块中初始化catalinaBase 和 catalinaHome")]),t._v(" "),r("li",[t._v("common、shared、server类加载器初始化")])]),t._v(" "),r("p",[r("img",{attrs:{src:e(287),alt:"image-20201022211110375"}})]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("利用反射机制初始化org.apache.catalina.startup.Catalina类")])]),t._v(" "),r("ul",[r("li",[t._v("digester进行压栈处理处理server.xml生成StandardServer、StandardService...")]),t._v(" "),r("li",[t._v("对组件进行初始化（使用模板方法设计模式LifecycleBase + 组件）")])]),t._v(" "),r("h2",{attrs:{id:"connector解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connector解析"}},[t._v("#")]),t._v(" Connector解析")]),t._v(" "),r("p",[t._v("Connector接收网络请求并把网络请求封装成request、response传递给Servlet Container进行处理， Servlet Container处理完成之后返回到Connector， Connector把处理结果返回到客户端。")]),t._v(" "),r("ol",[r("li",[t._v("底层实现 NIO、NIO2")]),t._v(" "),r("li",[t._v("实现TCP/IP和HTTP协议")])]),t._v(" "),r("h3",{attrs:{id:"默认实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#默认实现"}},[t._v("#")]),t._v(" 默认实现")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("HTTP Connector： 解析HTTP请求（HTTP BIO | HTTP NIO Connector）")])]),t._v(" "),r("li",[r("p",[t._v("AJP Connector: 基于AJP协议，用于Tomcat与HTTP服务器通信定制的协议，能提供较高的通信速度和效率。如与Apache服务器集成时，采用这个协议")])]),t._v(" "),r("li",[r("p",[t._v("APR HTTP Connector：用C实现，通过JNI调用的。主要提升对静态资源（如HTML、图片、CSS、JS等）的访问性能。")])])]),t._v(" "),r("h3",{attrs:{id:"组成部分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#组成部分"}},[t._v("#")]),t._v(" 组成部分")]),t._v(" "),r("ol",[r("li",[t._v("protocolHandler被设计用来监听服务器某个端口的网络请求（Http11NioProtocol）")]),t._v(" "),r("li",[t._v("Endpoint解析请求")]),t._v(" "),r("li",[t._v("Acceptor线程")])])])}),[],!1,null,null,null);a.default=o.exports}}]);