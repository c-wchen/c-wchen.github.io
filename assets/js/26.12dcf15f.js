(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{315:function(t,s,a){t.exports=a.p+"assets/img/image-20220116122131534.7a71a7f3.png"},316:function(t,s,a){t.exports=a.p+"assets/img/image-20220117232618269.7b97331f.png"},495:function(t,s,a){"use strict";a.r(s);var e=a(13),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-编译开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-编译开始"}},[t._v("#")]),t._v(" 1. 编译开始")]),t._v(" "),e("p",[t._v("依赖库")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" libncurses5-dev libssl-dev bison flex libelf-dev gcc "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" openssl libc6-dev\n")])])]),e("p",[t._v("or yum")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc gcc-c++ glibc glibc-devel pcre pcre-devel ncurses-devel flex bison-devel bison perl-Test-Fatal  openssl-devel elfutils-libelf-devel -y\n")])])]),e("p",[t._v("下载源码")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("wget https"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.3.7.tar.gz")]),t._v("\n")])])]),e("blockquote",[e("ol",[e("li",[e("p",[t._v("不建议使用git clone， 没有梯子啥也不是")])]),t._v(" "),e("li",[e("p",[t._v("迅雷下载再上传，妥妥的。")])])])]),t._v(" "),e("p",[e("code",[t._v("make menuconfig")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(315),alt:"image-20220116122131534"}})]),t._v(" "),e("p",[t._v("勾选配置项")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 勾选1")]),t._v("\nProcessor "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" and features ----"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Randomize the address of the kernel image "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KASLR"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 勾选2")]),t._v("\nKernel hacking  ---"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Kernel debugging\n    Compile-time checks and compiler options  ---"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Compile the kernel with debug info\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   Provide GDB scripts "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" kernel debugging\n")])])]),e("p",[t._v("多线程编译")]),t._v(" "),e("p",[e("code",[t._v("make -j$(nproc)")])]),t._v(" "),e("blockquote",[e("p",[t._v("编译时间20-30分钟")])]),t._v(" "),e("p",[t._v("生成文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("./arch/x86/boot/bzImage\n./vmlinux\n")])])]),e("h2",{attrs:{id:"_2-qemu配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-qemu配置"}},[t._v("#")]),t._v(" 2. Qemu配置")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("#安装qemu\napt-get install qemu\n")])])]),e("blockquote",[e("p",[t._v("此路不通的话， 建立手动编译")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/sukysun125/article/details/89378594",target:"_blank",rel:"noopener noreferrer"}},[t._v("QEMU3.1.0编译安装"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"_3-根文件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-根文件系统"}},[t._v("#")]),t._v(" 3. 根文件系统")]),t._v(" "),e("p",[t._v("内核启动， boot loader 加载完内核文件 vmlinuz 后，紧接着挂载磁盘根文件系统，但如果此时内核没有相应驱动，无法识别磁盘，就需要先加载驱动，而驱动又位于 "),e("code",[t._v("/lib/modules")]),t._v("，得挂载根文件系统才能读取，这就陷入了一个两难境地，系统无法顺利启动。于是有了 "),e("code",[t._v("initramfs")]),t._v(" 根文件系统，其中包含必要的设备驱动和工具，boot loader加载 "),e("code",[t._v("initramfs")]),t._v(" 到内存中，内核会将其挂载到根目录 "),e("code",[t._v("/")]),t._v("，然后运行 "),e("code",[t._v("/init")]),t._v(" 脚本，挂载真正的磁盘根文件系统。")]),t._v(" "),e("p",[t._v("下面采用两种方法实现简单方法挂载根文件系统,  任选一种调试即可。")]),t._v(" "),e("h3",{attrs:{id:"_1-1-busybox"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-busybox"}},[t._v("#")]),t._v(" 1.1 busybox")]),t._v(" "),e("p",[t._v("下载 busybox 源代码，解压，假设解压到 "),e("code",[t._v("~/busybox-1.31.0")]),t._v("，解压完成后，跟内核一样先配置编译选项：")]),t._v(" "),e("p",[t._v("安装依赖")]),t._v(" "),e("p",[t._v("yum install glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel zlib-devel libmcrypt-devel glibc-static ncurses-devel -y")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". 配置\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/busybox\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" menuconfig\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". 选择配置项\nSettings  ---"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Build static binary "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no shared libs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". 编译\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" -j"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("nproc"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## noproc命令可查看CPU内核数")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". 在 ~/busybox目录下执行以下命令\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" initramfs\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" initramfs\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/_install/* -rf ./\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" dev proc sys\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p lib/modules\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p etc/init.d\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" etc/init.d/rcS\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" a+x etc/init.d/rcS\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -a /dev/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("null,console,tty,tty1,tty2,tty3,tty4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" dev/\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ~/linux-5.3.7/drivers/net/ethernet/intel/e1000/e1000.ko lib/modules\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" linuxrc\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" init\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" a+x init\n")])])]),e("p",[e("code",[t._v("vim init")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/sh")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),t._v(" -t proc none /proc\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),t._v(" -t sysfs none /sys\ninsmod /lib/modules/e1000.ko\n/sbin/mdev -s\nsetsid cttyhack /bin/sh\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" /sbin/init\n")])])]),e("p",[t._v("打包"),e("code",[t._v("initramfs")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" -print0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cpio --null -ov --format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("newc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v(" -9 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/initramfs.cpio.gz\n")])])]),e("p",[t._v("启动内核并调试")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("qemu-system-x86_64 -s -S -kernel ~/linux-5.3.7/arch/x86/boot/bzImage -initrd ~/busybox-1.31.0/initramfs.cpio.gz -nographic -append "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nokaslr console=ttyS0"')]),t._v(" -serial mon:stdio -device e1000,netdev"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net0 -netdev user,id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net0,hostfwd"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tcp::5555-:22\n")])])]),e("p",[t._v("启动调试")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("gdb vmlinux\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" target remote :1234\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" b start_kernel\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" c\n")])])]),e("h3",{attrs:{id:"_1-2-helloworld"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-helloworld"}},[t._v("#")]),t._v(" 1.2 helloworld")]),t._v(" "),e("p",[t._v("制作helloworld的rootfs用于测试"),e("code",[t._v("vim main.c")])]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 几个教程头文件都引错了....")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fflush")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("stdout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("编译")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("gcc --static -o debug_kernel main.c\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" debug_kernel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cpio -o --format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("newc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" rootfs\t\n")])])]),e("p",[t._v("Qemu直接运行测试（非必须）")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("sudo qemu"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("system"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x86_64 \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("kernel "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("arch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x86"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bzImage \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("initrd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rootfs \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("append "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nokaslr root=/dev/ram rdinit=/debug_kernel"')]),t._v("\n")])])]),e("p",[t._v("Qemu 开启GDB调试")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("sudo qemu"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("system"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x86_64  \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("kernel "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("arch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x86"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bzImage  \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("initrd "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rootfs  \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("append "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nokaslr root=/dev/ram rdinit=/debug_kernel"')]),t._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("smp "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("S\n")])])]),e("p",[t._v("进行以上会打开Qemu并进入等待调试状态，此时可以直接gdb调试，如下（非必须）")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("gdb "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("vmLinux\n#以下进行调试\ntarget remote"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v("\nb start_kernel\nc\n")])])]),e("h3",{attrs:{id:"_1-3-运行截图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-运行截图"}},[t._v("#")]),t._v(" 1.3 运行截图")]),t._v(" "),e("p",[e("img",{attrs:{src:a(316),alt:"image-20220117232618269"}})]),t._v(" "),e("h2",{attrs:{id:"_4-错误总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-错误总结"}},[t._v("#")]),t._v(" 4. 错误总结")]),t._v(" "),e("ol",[e("li",[t._v("内核错误: No rule to make target ‘debian/canonical-certs.pem‘, needed by ‘certs/x509_certificate_list‘")])]),t._v(" "),e("blockquote",[e("p",[t._v("修改.config文件"),e("code",[t._v("CONFIG_SYSTEM_TRUSTED_KEYS")]),t._v("，将其置空。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" .config\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将该项原有内容删掉即可，如下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CONFIG_SYSTEM_TRUSTED_KEYS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("打断点执行无法停止（一直continuing...）")])]),t._v(" "),e("blockquote",[e("p",[t._v("内核启动参数上添加 nokaslr： 关闭KASLR技术")]),t._v(" "),e("p",[t._v("KASLR技术让kernel image映射的地址相对链接地址偏移。偏移地址可以通过dts设置。如果bootloader支持每次开机随机生成偏移数值，那么可以做到每次开机kernel image映射的虚拟地址都不一样。因此，对于开启KASLR的kernel来说，不同的产品的kernel image映射的地址几乎都不一样。因此在安全性上有一定的提升。")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/440856634",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于Nokaslr的Linux内核编译与单步跟踪"),e("OutboundLink")],1)]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("glib安装时libffi 和 libmount已经安装，提示没有该依赖")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("wchen@wchen ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -qa libffi\nlibffi-3.0.13-19.el7.x86_64\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("wchen@wchen ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -qa libmount\nlibmount-2.23.2-65.el7_9.1.x86_64\n")])])]),e("p",[t._v("解决方法：")]),t._v(" "),e("p",[t._v("yum install -y libmount-devel libffi-devel")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("ERROR: glib-2.40 gthread-2.0 is required to compile QEMU")])]),t._v(" "),e("p",[t._v("sudo yum install glib2  glib2-devel")]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("rpm包devel包")])]),t._v(" "),e("p",[t._v("不带"),e("code",[t._v("devel")]),t._v("后缀的"),e("code",[t._v("package")]),t._v("，通常只包含能让程序运行的动态库和配置文件。而带"),e("code",[t._v("devel")]),t._v("后缀的"),e("code",[t._v("package")]),t._v("，则包含使用这个"),e("code",[t._v("package")]),t._v("开发程序的所有的必需文件。比如头文件，等等。有时"),e("code",[t._v("devel package")]),t._v("还包含静态库。")]),t._v(" "),e("h2",{attrs:{id:"_5-相关下载连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-相关下载连接"}},[t._v("#")]),t._v(" 5. 相关下载连接")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://busybox.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BusyBox"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://download.qemu.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Qemu"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://ftp.gnu.org/gnu/gdb/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GDB"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://download.gnome.org/sources/glib/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GLib"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"_6-参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-参考"}},[t._v("#")]),t._v(" 6. 参考")]),t._v(" "),e("p",[t._v("安装教程："),e("a",{attrs:{href:"https://blog.csdn.net/yexiangCSDN/article/details/118221293",target:"_blank",rel:"noopener noreferrer"}},[t._v("VSCode 调试 Linux内核_"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("安装教程： "),e("a",{attrs:{href:"https://howardlau.me/programming/debugging-linux-kernel-with-vscode-qemu.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 VSCode + qemu 搭建 Linux 内核调试环境 "),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("安装GDB： "),e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/105069730",target:"_blank",rel:"noopener noreferrer"}},[t._v("利用VS Code+Qemu+GDB调试Linux内核"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("运行一个最小的busybox文件系统: "),e("a",{attrs:{href:"https://www.bilibili.com/read/cv11271232",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bilibili.com/read/cv11271232"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);