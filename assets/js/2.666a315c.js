(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{293:function(t,s,a){t.exports=a.p+"assets/img/clip_image002.21f8a4ba.jpg"},294:function(t,s,a){t.exports=a.p+"assets/img/clip_image004.ee535af0.jpg"},295:function(t,s,a){t.exports=a.p+"assets/img/clip_image006.1a95cb89.jpg"},296:function(t,s,a){t.exports=a.p+"assets/img/image-20211205163306462.d8b5c0c9.png"},297:function(t,s,a){t.exports=a.p+"assets/img/image-20211205172429532.b8ed7bb3.png"},298:function(t,s,a){t.exports=a.p+"assets/img/image-20211205173227085.0a97e336.png"},299:function(t,s,a){t.exports=a.p+"assets/img/image-20211205173357988.62b31979.png"},300:function(t,s,a){t.exports=a.p+"assets/img/image-20211203010810611.57d2b3e2.png"},301:function(t,s,a){t.exports=a.p+"assets/img/image-20211203011058773.6c5d8f54.png"},302:function(t,s,a){t.exports=a.p+"assets/img/image-20211205005635989.f5df33cf.png"},303:function(t,s,a){t.exports=a.p+"assets/img/image-20211205005716021.f79bd52a.png"},304:function(t,s,a){t.exports=a.p+"assets/img/image-20211205005733975.d159e8d8.png"},305:function(t,s,a){t.exports=a.p+"assets/img/image-20211205002144507.e7301fe7.png"},306:function(t,s,a){t.exports=a.p+"assets/img/image-20211205232841918.524090d7.png"},482:function(t,s,a){"use strict";a.r(s);var e=a(13),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull jenkins/jenkins:lts\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d --name jenkins -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 --restart always -v /home/jenkins/jenkins_home:/var/jenkins_home jenkins/jenkins:lts\n")])])]),e("h2",{attrs:{id:"权限设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#权限设置"}},[t._v("#")]),t._v(" 权限设置")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(":1000 /home/jenkins/jenkins_home\n")])])]),e("h2",{attrs:{id:"配置凭证-来源github或者自建的gitlab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置凭证-来源github或者自建的gitlab"}},[t._v("#")]),t._v(" 配置凭证（来源github或者自建的gitlab）")]),t._v(" "),e("p",[e("img",{attrs:{src:a(293),alt:"图形用户界面, 应用程序  描述已自动生成"}})]),t._v(" "),e("p",[t._v("创建username with passsword类型凭证")]),t._v(" "),e("p",[e("img",{attrs:{src:a(294),alt:"图形用户界面, 文本, 应用程序, 电子邮件  描述已自动生成"}})]),t._v(" "),e("p",[t._v("注意: 可以使用SSH免密登陆")]),t._v(" "),e("h2",{attrs:{id:"配置环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置环境变量"}},[t._v("#")]),t._v(" 配置环境变量")]),t._v(" "),e("p",[t._v("系统管理>系统配置>全局属性>环境变量")]),t._v(" "),e("p",[t._v("添加JAVA_HOME，MVN_HOME")]),t._v(" "),e("p",[e("img",{attrs:{src:a(295),alt:"图形用户界面, 文本, 应用程序, 电子邮件  描述已自动生成"}})]),t._v(" "),e("h2",{attrs:{id:"基于角色的权限管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于角色的权限管理"}},[t._v("#")]),t._v(" 基于角色的权限管理")]),t._v(" "),e("h3",{attrs:{id:"_1-插件安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-插件安装"}},[t._v("#")]),t._v(" 1. 插件安装")]),t._v(" "),e("p",[t._v("安装插件"),e("code",[t._v("Role-based Authorization Strategy")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(296),alt:"image-20211205163306462"}})]),t._v(" "),e("h3",{attrs:{id:"_2-创建用户"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建用户"}},[t._v("#")]),t._v(" 2. 创建用户")]),t._v(" "),e("p",[t._v("系统管理>管理用户>创建用户")]),t._v(" "),e("p",[e("img",{attrs:{src:a(297),alt:"image-20211205172429532"}})]),t._v(" "),e("h3",{attrs:{id:"_3-创建角色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建角色"}},[t._v("#")]),t._v(" 3. 创建角色")]),t._v(" "),e("p",[t._v("系统管理>"),e("code",[t._v("Manage and Assign Roles")]),t._v(">"),e("code",[t._v("Manage Roles")])]),t._v(" "),e("p",[t._v("三种角色")]),t._v(" "),e("ol",[e("li",[t._v("Global roles（全局角色）：管理员等高级用户可以创建基于全局的角色")]),t._v(" "),e("li",[t._v("Item roles：针对某个或者某些项目的角色（使用正则匹配项目名或者文件夹）")]),t._v(" "),e("li",[t._v("Slave roles：节点相关的权限")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(298),alt:"image-20211205173227085"}})]),t._v(" "),e("blockquote",[e("p",[t._v("注意")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Overall:Read保证基本用户访问权限")])]),t._v(" "),e("li",[e("p",[t._v("Item Roles>Pattern点击匹配规则内容可以显示匹配项目条目")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-分配角色权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-分配角色权限"}},[t._v("#")]),t._v(" 3. 分配角色权限")]),t._v(" "),e("p",[t._v("系统管理>"),e("code",[t._v("Manage and Assign Roles")]),t._v(">"),e("code",[t._v("Assign Roles")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(299),alt:"image-20211205173357988"}})]),t._v(" "),e("h2",{attrs:{id:"钉钉机器人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#钉钉机器人"}},[t._v("#")]),t._v(" 钉钉机器人")]),t._v(" "),e("h3",{attrs:{id:"_1-钉钉群创建机器人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-钉钉群创建机器人"}},[t._v("#")]),t._v(" 1. 钉钉群创建机器人")]),t._v(" "),e("p",[t._v("创建群聊 > 开启机器人> 记录webhook和加密方式")]),t._v(" "),e("p",[e("img",{attrs:{src:a(300),alt:"image-20211203010810611"}})]),t._v(" "),e("h3",{attrs:{id:"_2-添加机器人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加机器人"}},[t._v("#")]),t._v(" 2. 添加机器人")]),t._v(" "),e("p",[t._v("系统管理>系统管理>钉钉")]),t._v(" "),e("blockquote",[e("p",[t._v("webhook和加签方式对应，最后在项目中开启机器人")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(301),alt:"image-20211203011058773"}})]),t._v(" "),e("h3",{attrs:{id:"_3-关联机器人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-关联机器人"}},[t._v("#")]),t._v(" 3. 关联机器人")]),t._v(" "),e("p",[t._v("项目中开启机器人即可...")]),t._v(" "),e("h2",{attrs:{id:"参数化构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数化构建"}},[t._v("#")]),t._v(" 参数化构建")]),t._v(" "),e("p",[t._v("如何使用参数化构建不同分支的Git，两种方式选择")]),t._v(" "),e("ol",[e("li",[t._v("插件Git Parameter")]),t._v(" "),e("li",[t._v("参数化构建")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(302),alt:"image-20211205005635989"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(303),alt:"image-20211205005716021"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(304),alt:"image-20211205005733975"}})]),t._v(" "),e("h2",{attrs:{id:"添加构建时间戳"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加构建时间戳"}},[t._v("#")]),t._v(" 添加构建时间戳")]),t._v(" "),e("p",[t._v("添加插件"),e("code",[t._v("timestamper")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(305),alt:"image-20211205002144507"}})]),t._v(" "),e("h2",{attrs:{id:"sonar构建代码扫描"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sonar构建代码扫描"}},[t._v("#")]),t._v(" sonar构建代码扫描")]),t._v(" "),e("p",[t._v("TODO")]),t._v(" "),e("h2",{attrs:{id:"pipeline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[t._v("#")]),t._v(" Pipeline")]),t._v(" "),e("div",{staticClass:"language-groovy extra-class"},[e("pre",{pre:!0,attrs:{class:"language-groovy"}},[e("code",[t._v("pipeline"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n    stages"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========executing A========"')])]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            post"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                always"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========always========"')])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                success"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========A executed successfully========"')])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                failure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========A execution failed========"')])]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    post"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        always"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========always========"')])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        success"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========pipeline executed successfully ========"')])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        failure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            echo "),e("span",{pre:!0,attrs:{class:"token interpolation-string"}},[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========pipeline execution failed========"')])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("anget")]),t._v(" 此关键字用于表示当前流水线将要执行的位置，当我们的Jenkins是主从那种集群的时候，可以通过agent进行指定，同时也可以基于docker容器的构建，后边会详细介绍，这里的any表示任一客户端，因为当前Jenkins是单机的，因此就在当前主机执行。")]),t._v(" "),e("li",[e("code",[t._v("environment")]),t._v(" 用于设置环境变量，以便于代码复用的时候，更加清晰明了的简化工作内容，只要项目是类似的，那么直接在 "),e("code",[t._v("environment")]),t._v("区域进行配置即可，而无需穿梭到复杂的内容里更改配置。需要注意的一点是，变量的声明可以在pipeline以及stage区域当中，与大多数语言一样，不同的区域作用域也是不一样的。")]),t._v(" "),e("li",[e("code",[t._v("options")]),t._v(" 用来配置Jenkins应用自身的一些配置项，这个地方简单列举了几个，后边在详解参数配置的文章里边，会详细介绍。")]),t._v(" "),e("li",[e("code",[t._v("stages")]),t._v(" 此关键字用于表示流水线各个步骤的声明，其下一层级是stage，stages部分至少包含一个stage。")]),t._v(" "),e("li",[e("code",[t._v("stage")]),t._v(" 表示实际构建的阶段，每个阶段做不同的事情，可按如上方式定义阶段的名称。")]),t._v(" "),e("li",[e("code",[t._v("steps")]),t._v(" 标识阶段之中具体的构建步骤，至少包含一个步骤，在stage中有且只能有一个steps。")]),t._v(" "),e("li",[e("code",[t._v("post")]),t._v(" 用于定义在整个流水线执行结果的情况，通常可配合通知进行对项目构建状态的告知。")])]),t._v(" "),e("h2",{attrs:{id:"共享库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#共享库"}},[t._v("#")]),t._v(" 共享库")]),t._v(" "),e("p",[e("img",{attrs:{src:a(306),alt:"image-20211205232841918"}})])])}),[],!1,null,null,null);s.default=n.exports}}]);