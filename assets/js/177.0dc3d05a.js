(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{518:function(t,s,a){"use strict";a.r(s);var r=a(13),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"user-agent识别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-agent识别"}},[t._v("#")]),t._v(" User-Agent识别")]),t._v(" "),a("p",[t._v("修改请求头信息里的User-Agent， 可以使用动态更换User-Agent")]),t._v(" "),a("h3",{attrs:{id:"请求头信息识别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求头信息识别"}},[t._v("#")]),t._v(" 请求头信息识别")]),t._v(" "),a("p",[t._v("比如说referer, content-type,请求方法（POST, GET）")]),t._v(" "),a("p",[t._v("构造相应的请求头信息。比如说referer，我们在提取URL的时候，要把URL所在页面的URL也存储起来，并放到request.headers。")]),t._v(" "),a("h3",{attrs:{id:"异步加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步加载"}},[t._v("#")]),t._v(" 异步加载")]),t._v(" "),a("p",[t._v('我们需要分析页面的网络请求，从中找出和我们想要的数据相关的请求，并分析它的请求头信息、参数、cookie，然后根据这些信息构造我们的请求。通常来说都是ajax请求，也有图片请求，比如图片的lazy load，通过js在页面加载后修改图片的src属性。一般都会有其他的自定义属性存在，比如说"_src"。总之，可以找到一些ID或者链接。注意观察相关dom节点树上的特殊属性。')]),t._v(" "),a("h3",{attrs:{id:"请求参数加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求参数加密"}},[t._v("#")]),t._v(" 请求参数加密")]),t._v(" "),a("p",[t._v("一般是在前端通过一定的计算，构造出一个哈希值。需要分析前端的代码，找出具体计算的代码逻辑，并用python再实现。如果前端的代码经过混淆，并且代码量十分巨大，可以使用selenium或者splash等引擎去请求。但是，如果爬取的数据需求量比较大，我们还是要通过直接调用对方接口的形式去获取数据。")]),t._v(" "),a("h3",{attrs:{id:"请求结果加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求结果加密"}},[t._v("#")]),t._v(" 请求结果加密")]),t._v(" "),a("h4",{attrs:{id:"_1-json数据加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-json数据加密"}},[t._v("#")]),t._v(" 1.json数据加密")]),t._v(" "),a("p",[t._v("比如携程酒店房型列表接口，用它自己的js解密，或者分析它的js前端逻辑，用python代码实现出来。")]),t._v(" "),a("h4",{attrs:{id:"_2-css加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-css加密"}},[t._v("#")]),t._v(" 2. CSS加密")]),t._v(" "),a("p",[t._v("比如大众点评，通过CSS样式去代替某个字符。我们需要同时爬取CSS文件，并且分析CSS文件内的样式，最后定位到svg文件，并分析提取svg内的内容，完成替换。")]),t._v(" "),a("h4",{attrs:{id:"_3-字体加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-字体加密"}},[t._v("#")]),t._v(" 3. 字体加密")]),t._v(" "),a("p",[t._v("比如猫眼电影。每次随机返回一个字体文件，并且字符也是随机的。需要每次下载对应的字体文件，并解析字体文件和字符之间的对应关系。")]),t._v(" "),a("h3",{attrs:{id:"cookie限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie限制"}},[t._v("#")]),t._v(" Cookie限制")]),t._v(" "),a("p",[t._v("登录、session限制，比如新片场，拿到登录以后的cookie，然后set到头信息里面，这样请求的时候就相当于登录了。")]),t._v(" "),a("h2",{attrs:{id:"ip频率限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip频率限制"}},[t._v("#")]),t._v(" IP频率限制")]),t._v(" "),a("p",[t._v("需要准备大量的IP代理，获得IP代理的方式有：")]),t._v(" "),a("ol",[a("li",[t._v("自己搭建代理服务器（tinyproxy, squid+动态拨号，DDNS）")]),t._v(" "),a("li",[t._v("付费购买")]),t._v(" "),a("li",[t._v("爬取公开网络上代理（可用性比较低）")])]),t._v(" "),a("p",[t._v("控制爬取频率，保持不被封的情况下的最合适的并发数量。")]),t._v(" "),a("h2",{attrs:{id:"验证码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证码"}},[t._v("#")]),t._v(" 验证码：")]),t._v(" "),a("ol",[a("li",[t._v("尝试可否绕过前端验证，直接请求具体的接口，以绕开验证码.")]),t._v(" "),a("li",[t._v("可以用图片识别库去识别某些比较简单的验证码")]),t._v(" "),a("li",[t._v("接入云打码平台")]),t._v(" "),a("li",[t._v("用机器学习训练验证码的图片库，然后识别")])])])}),[],!1,null,null,null);s.default=e.exports}}]);