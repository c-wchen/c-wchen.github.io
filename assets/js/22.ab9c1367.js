(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{282:function(t,a,s){t.exports=s.p+"assets/img/image-20200819204516586.d50e795e.png"},283:function(t,a,s){t.exports=s.p+"assets/img/image-20200819202413583.5826a603.png"},429:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"jvm种类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm种类"}},[t._v("#")]),t._v(" JVM种类")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 使用命令 java -version")]),t._v("\njava version "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.8.0_65"')]),t._v("\nJava"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SE Runtime Environment "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),t._v(".0_65-b17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nJava HotSpot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("-Bit Server VM "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.65")]),t._v("-b01, mixed mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ol",[n("li",[t._v("Sun公司HotSpot")]),t._v(" "),n("li",[t._v("BEA公司JRockit")]),t._v(" "),n("li",[t._v("IBM公司J9VM JIT")])]),t._v(" "),n("h2",{attrs:{id:"vm结构图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vm结构图"}},[t._v("#")]),t._v(" VM结构图")]),t._v(" "),n("p",[n("img",{attrs:{src:s(282),alt:"image-20200819204516586"}})]),t._v(" "),n("h2",{attrs:{id:"方法区-method-area"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法区-method-area"}},[t._v("#")]),t._v(" 方法区（Method Area）")]),t._v(" "),n("p",[t._v("方法去是被所有线程共享的， 所有字段和方法的字节码，以及一些特殊的方法， 如构造函数， 接口代码也在此定义， 简单说， 所有定义方法的信息都保存在该区域")]),t._v(" "),n("p",[t._v("静态方法、常量、"),n("strong",[t._v("类信息（构造方法， 接口定义）")]),t._v("、运行时的"),n("strong",[t._v("常量池")]),t._v("也存在方法区中， 但是实例变量存在内存中，和方法区无关")]),t._v(" "),n("p",[t._v("推内存和栈内存的关系")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wchen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Student{"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name=\'"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\''")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('", age="')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token char"}},[t._v("'}'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" stu  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        stu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        stu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(283),alt:"image-20200819202413583"}})]),t._v(" "),n("p",[t._v("注意： 在"),n("code",[t._v("Student stu = new Student()")]),t._v(" 实例化的过程中， 实例化对象会存入堆中， 栈中存储指向堆的引用")]),t._v(" "),n("h2",{attrs:{id:"堆-heap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap"}},[t._v("#")]),t._v(" 堆 Heap")]),t._v(" "),n("p",[t._v("Heap， 一个JVM只有一个堆内存， 堆内存的大小是可以调节的")]),t._v(" "),n("p",[t._v("堆内存中细分为三个区域")]),t._v(" "),n("ul",[n("li",[t._v("新生区：\n"),n("ul",[n("li",[t._v("伊甸园(Eden Space)： 所有对象在此区域实例")]),t._v(" "),n("li",[t._v("幸存0区 from、to")]),t._v(" "),n("li",[t._v("幸存1区 to、from")])])]),t._v(" "),n("li",[t._v("养老区")]),t._v(" "),n("li",[t._v("永久区(元空间， 方法区) Perm： 常驻内存， 用来存放JDK自身的class对象， interface元数据， 存储java运行时的环境或类信息， 这个区域不存在垃圾回收机制， 关闭虚拟机的时候会释放,元空间： 逻辑上存在， 物理上不存在")])]),t._v(" "),n("p",[t._v("GC垃圾回收一般发生在伊甸园区和养老区，堆内存满载了之后会报"),n("code",[t._v("java.lang.OutOfMemoryError: Java heap space")])]),t._v(" "),n("p",[t._v("经过研究， 99%的对象是临时对象， 正常情况的很少进入养老区， （方法区在堆中，存在一部分人把方法区称为非堆）")]),t._v(" "),n("p",[n("strong",[t._v("注意")]),t._v("： 幸存区之间相互交换， 根据幸存区的大小判断from和to， 每次GC都会Eden活的对象移到幸存区， 一旦Eden区被GC之后， Eden区是空的。")]),t._v(" "),n("p",[t._v("调节堆内存大小")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("-Xms8m -Xmx8m -XX:+PrintGCDetails\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OOM")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chenwangchen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),n("p",[t._v("分析工具")]),t._v(" "),n("p",[t._v("Jprofiler")]),t._v(" "),n("h2",{attrs:{id:"gc-garbage-collection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gc-garbage-collection"}},[t._v("#")]),t._v(" GC （Garbage Collection）")]),t._v(" "),n("h4",{attrs:{id:"种类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#种类"}},[t._v("#")]),t._v(" 种类")]),t._v(" "),n("ol",[n("li",[t._v("轻GC（普通GC）： 大部分在新生代， 有时候也会走新生代的幸存区")]),t._v(" "),n("li",[t._v("重GC（全局GC）： 针对老年区")])]),t._v(" "),n("h4",{attrs:{id:"算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("标记清除法 *")]),t._v(" "),n("p",[t._v("“标记-清除”（Mark-Sweep）算法，如它的名字一样，算法分为“标记”和“清除”两个阶段：首先标记出所有需要回收的对象，在标记完成后统一回收掉所有被标记的对象。之所以说它是最基础的收集算法，是因为后续的收集算法都是基于这种思路并对其缺点进行改进而得到的。")]),t._v(" "),n("p",[t._v("它的主要缺点有两个：一个是效率问题，标记和清除过程的效率都不高；另外一个是空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致，当程序在以后的运行过程中需要分配较大对象时无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。")])]),t._v(" "),n("li",[n("p",[t._v("标记压缩 *")]),t._v(" "),n("p",[t._v("复制收集算法在对象存活率较高时就要执行较多的复制操作，效率将会变低。更关键的是，如果不想浪费50%的空间，就需要有额外的空间进行分配担保，以应对被使用的内存中所有对象都100%存活的极端情况，所以在老年代一般不能直接选用这种算法。")]),t._v(" "),n("p",[t._v("根据老年代的特点，有人提出了另外一种“标记-整理”（Mark-Compact）算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存")])]),t._v(" "),n("li",[n("p",[t._v("复制算法 *")]),t._v(" "),n("p",[t._v("“复制”（Copying）的收集算法，它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。")]),t._v(" "),n("p",[t._v("这样使得每次都是对其中的一块进行内存回收，内存分配时也就不用考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。只是这种算法的代价是将内存缩小为原来的一半，持续复制长生存期的对象则导致效率降低。")])]),t._v(" "),n("li",[n("p",[t._v("分代收集算法")]),t._v(" "),n("p",[t._v("GC分代的基本假设：绝大部分对象的生命周期都非常短暂，存活时间短。")]),t._v(" "),n("p",[t._v("“分代收集”（Generational Collection）算法，把Java堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集时都发现有大批对象死去，只有少量存活，那就选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须使用“标记-清理”或“标记-整理”算法来进行回收。")])])]),t._v(" "),n("h4",{attrs:{id:"轻gc和重gc发生时期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#轻gc和重gc发生时期"}},[t._v("#")]),t._v(" 轻GC和重GC发生时期")]),t._v(" "),n("p",[t._v("当一个对象经历15次GC之后，被移到养老区")]),t._v(" "),n("h4",{attrs:{id:"对象存活判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象存活判断"}},[t._v("#")]),t._v(" 对象存活判断")]),t._v(" "),n("p",[n("strong",[t._v("引用计数")]),t._v("：每个对象有一个引用计数属性，新增一个引用时计数加1，引用释放时计数减1，计数为0时可以回收。此方法简单，无法解决对象相互循环引用的问题。\n"),n("strong",[t._v("可达性分析")]),t._v("（Reachability Analysis）：从GC Roots开始向下搜索，搜索所走过的路径称为引用链。当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的。不可达对象。")]),t._v(" "),n("p",[t._v("总结")]),t._v(" "),n("ol",[n("li",[t._v("内存效率 ： 复制算法   标记清除法  标记压缩  （时间复杂度）")]),t._v(" "),n("li",[t._v("内存整齐度： 标记算法 = 标记压缩算法 > 标记清除")]),t._v(" "),n("li",[t._v("内存利用率 ： 标记压缩算法 = 标记清楚法 > 复制算法")])]),t._v(" "),n("p",[t._v("最优算法")]),t._v(" "),n("p",[t._v("没有最好的算法， 只有最合适的算法， GC = 分代收集算法")]),t._v(" "),n("p",[t._v("年轻代")]),t._v(" "),n("ul",[n("li",[t._v("存活率低")]),t._v(" "),n("li",[t._v("复制算法")])]),t._v(" "),n("p",[t._v("老年代")]),t._v(" "),n("ul",[n("li",[t._v("区域大，存活率")]),t._v(" "),n("li",[t._v("标记清除（内存碎片不是太多） + 标记压缩算法")])]),t._v(" "),n("p",[t._v("JMM： java memory model https://zhuanlan.zhihu.com/p/29881777")]),t._v(" "),n("h3",{attrs:{id:"参考文献"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI4NDY5Mjc1Mg==&mid=2247483952&idx=1&sn=ea12792a9b7c67baddfaf425d8272d33&chksm=ebf6da4fdc815359869107a4acd15538b3596ba006b4005b216688b69372650dbd18c0184643&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("GC算法 垃圾收集器"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/34426768",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于Jvm知识看这一篇就够了"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);